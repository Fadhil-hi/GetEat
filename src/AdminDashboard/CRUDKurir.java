package AdminDashboard;


import Database.DBNeeds;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;

public class CRUDKurir extends javax.swing.JInternalFrame {
    private int currentRow = 0;
    private int idPointer = 0;

    /**
     * Creates new form CRUDPenjual
     */
    public CRUDKurir() {
        initComponents();
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0,0,0,0));
        BasicInternalFrameUI ui = (BasicInternalFrameUI)this.getUI();
        ui.setNorthPane(null);
        refreshTable();
        selectRow();
    }
    private void refreshTextField(){
        namaField.setText("");
        noTelpField.setText("");
        jkComboBox.setSelectedItem("Laki-Laki");
        namaKendaraanField.setText("");
        platNomorField.setText("");
        usernameField.setText("");
        passField.setText("");
    }
    
    private void refreshTable() {
        DefaultTableModel model = (DefaultTableModel) kurirTbl.getModel();

        model.setRowCount(0); // Menghapus semua baris dari tabel

        try (Connection connection = DBNeeds.getConnection()) {
            String selectQuery = "SELECT * FROM kurir";
            PreparedStatement preparedStatement = connection.prepareStatement(selectQuery);
            ResultSet resultSet = preparedStatement.executeQuery();

            while (resultSet.next()) {
                String id = resultSet.getString("id_Kurir");
                String nama = resultSet.getString("nama");
                String no_Telp = resultSet.getString("no_Telp");
                String jk = resultSet.getString("jenis_Kelamin");
                String namaKendaraan = resultSet.getString("nama_Kendaraan");
                String platNomor = resultSet.getString("plat_Nomor");
                String username = resultSet.getString("username");

                // Tambahkan data siswa ke tabel
                model.addRow(new Object[]{id, nama, no_Telp, jk, namaKendaraan, platNomor, username});
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
    private void selectRow() {
        kurirTbl.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (!e.getValueIsAdjusting()) {
                    int selectedRow = kurirTbl.getSelectedRow();

                    if (selectedRow != -1) {
                        DefaultTableModel model = (DefaultTableModel) kurirTbl.getModel();
                        String id = (String) model.getValueAt(selectedRow, 0);
                        String nama = (String) model.getValueAt(selectedRow, 1);
                        String no_Telp = (String) model.getValueAt(selectedRow, 2);
                        String jk = (String) model.getValueAt(selectedRow, 3);
                        String namaKendaraan = (String) model.getValueAt(selectedRow, 4);
                        String platNomor = (String) model.getValueAt(selectedRow, 5);
                        String username = (String) model.getValueAt(selectedRow, 6);
                        idPointer = Integer.parseInt(id);

                        setFields(nama, no_Telp, jk, namaKendaraan, platNomor, username);
                    }
                }
            }

        });
    }
    private void setFields(String nama, String noTelp, String jk, String namaKendaraan, String platNomor, String username) {
        namaField.setText(nama);
        noTelpField.setText(noTelp);
        jkComboBox.setSelectedItem(jk);
        namaKendaraanField.setText(namaKendaraan);
        platNomorField.setText(platNomor);
        usernameField.setText(username);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        kurirTbl = new javax.swing.JTable();
        namaLabel = new javax.swing.JLabel();
        namaField = new javax.swing.JTextField();
        noTelpLabel = new javax.swing.JLabel();
        noTelpField = new javax.swing.JTextField();
        jkLabel = new javax.swing.JLabel();
        kelurahanLabel = new javax.swing.JLabel();
        namaKendaraanField = new javax.swing.JTextField();
        platNomorField = new javax.swing.JTextField();
        platNoLabel = new javax.swing.JLabel();
        addButton = new javax.swing.JButton();
        updateButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        nextButton = new javax.swing.JButton();
        prevButton = new javax.swing.JButton();
        usernameLabel = new javax.swing.JLabel();
        usernameField = new javax.swing.JTextField();
        jkComboBox = new javax.swing.JComboBox<>();
        clearButton = new javax.swing.JButton();
        usernameLabel1 = new javax.swing.JLabel();
        passField = new javax.swing.JPasswordField();

        kurirTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Kurir", "Nama", "NoTelp", "Jenis Kelamin", "Nama Kendaraan", "Plat Nomor", "Username"
            }
        ));
        jScrollPane1.setViewportView(kurirTbl);

        namaLabel.setText("Nama");

        noTelpLabel.setText("Nomor Telepon");

        jkLabel.setText("Jenis Kelamin");

        kelurahanLabel.setText("Nama Kendaraan");

        platNoLabel.setText("Plat Nomor");

        addButton.setText("Add");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        updateButton.setText("Update");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        nextButton.setText(">");
        nextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextButtonActionPerformed(evt);
            }
        });

        prevButton.setText("<");
        prevButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prevButtonActionPerformed(evt);
            }
        });

        usernameLabel.setText("Username");

        jkComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Laki-Laki", "Perempuan" }));

        clearButton.setText("Clear");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        usernameLabel1.setText("Password");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(namaLabel)
                                .addGap(247, 247, 247))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(noTelpLabel)
                                .addGap(176, 176, 176))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(namaKendaraanField, javax.swing.GroupLayout.DEFAULT_SIZE, 270, Short.MAX_VALUE)
                            .addComponent(platNomorField, javax.swing.GroupLayout.DEFAULT_SIZE, 270, Short.MAX_VALUE)
                            .addComponent(usernameField, javax.swing.GroupLayout.DEFAULT_SIZE, 270, Short.MAX_VALUE)
                            .addComponent(usernameLabel)
                            .addComponent(jkComboBox, 0, 270, Short.MAX_VALUE)
                            .addComponent(jkLabel)
                            .addComponent(kelurahanLabel)
                            .addComponent(platNoLabel)
                            .addComponent(noTelpField, javax.swing.GroupLayout.DEFAULT_SIZE, 270, Short.MAX_VALUE)
                            .addComponent(namaField, javax.swing.GroupLayout.DEFAULT_SIZE, 270, Short.MAX_VALUE)
                            .addComponent(usernameLabel1)
                            .addComponent(passField))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(prevButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nextButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(clearButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(updateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 840, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 474, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(addButton)
                                    .addComponent(updateButton))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(deleteButton)
                                    .addComponent(clearButton)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(nextButton)
                                .addComponent(prevButton))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(namaLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(namaField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(noTelpLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(noTelpField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jkLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jkComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(kelurahanLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(namaKendaraanField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(platNoLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(platNomorField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(usernameLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(usernameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(usernameLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(passField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(70, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        String nama = namaField.getText();
        String noTelp = noTelpField.getText();
        String jk = (String)jkComboBox.getSelectedItem();
        String namaKendaraan = namaKendaraanField.getText();
        String platNomor = platNomorField.getText();
        String username = usernameField.getText();
        char [] arrPass = passField.getPassword();
        String password = new String(arrPass);
        DBNeeds.insertKurir(nama, noTelp, jk, namaKendaraan, platNomor, username, password);
        refreshTable();
        refreshTextField();
    }//GEN-LAST:event_addButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        String nama = namaField.getText();
        DBNeeds.deleteKurir(nama);
        refreshTable();
        refreshTextField();
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        String nama = namaField.getText();
        String noTelp = noTelpField.getText();
        String jk = (String)jkComboBox.getSelectedItem();
        String namaKendaraan = namaKendaraanField.getText();
        String platNomor = platNomorField.getText();
        String username = usernameField.getText();
        char [] arrPass = passField.getPassword();
        String password = new String(arrPass);
        DBNeeds.updateKurir(idPointer, nama, noTelp, jk, namaKendaraan, platNomor, username, password);
        refreshTable();
        refreshTextField();
    }//GEN-LAST:event_updateButtonActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        refreshTextField();
    }//GEN-LAST:event_clearButtonActionPerformed

    private void prevButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prevButtonActionPerformed
        DefaultTableModel model = (DefaultTableModel) kurirTbl.getModel();
        int rowCount = model.getRowCount();

        try{
            if (rowCount > 0) {
                currentRow = (currentRow - 1) % rowCount;
                String nama = (String) model.getValueAt(currentRow, 1);
                String noTelp = (String) model.getValueAt(currentRow, 2);
                String jk = (String) model.getValueAt(currentRow, 3);
                String namaKendaraan = (String) model.getValueAt(currentRow, 4);
                String platNomor = (String) model.getValueAt(currentRow, 5);
                String username = (String) model.getValueAt(currentRow, 6);
                setFields(nama, noTelp, jk, namaKendaraan, platNomor, username);

                kurirTbl.setRowSelectionInterval(currentRow, currentRow);
                if (rowCount < 0){
                    currentRow = 0;
                }
            } 
        } catch (IndexOutOfBoundsException e){
            System.err.println("This is First Index, Please press the Next Button");
        }
    }//GEN-LAST:event_prevButtonActionPerformed

    private void nextButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextButtonActionPerformed
        DefaultTableModel model = (DefaultTableModel) kurirTbl.getModel();
        int rowCount = model.getRowCount();

        try {
            if (rowCount > 0 && currentRow < rowCount - 1) {
                currentRow++;
                String nama = (String) model.getValueAt(currentRow, 1);
                String noTelp = (String) model.getValueAt(currentRow, 2);
                String jk = (String) model.getValueAt(currentRow, 3);
                String namaKendaraan = (String) model.getValueAt(currentRow, 4);
                String platNomor = (String) model.getValueAt(currentRow, 5);
                String username = (String) model.getValueAt(currentRow, 7);
                setFields(nama, noTelp, jk, namaKendaraan, platNomor, username);

                kurirTbl.setRowSelectionInterval(currentRow, currentRow);
            }
            if (currentRow <= rowCount - 1){
                System.err.println("This is Last Index, Please press the Previous Button");
            }
        } catch (IndexOutOfBoundsException e){
            System.err.println("This is Last Index, Please press the Previous Button");
        }
    }//GEN-LAST:event_nextButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JButton clearButton;
    private javax.swing.JButton deleteButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> jkComboBox;
    private javax.swing.JLabel jkLabel;
    private javax.swing.JLabel kelurahanLabel;
    private javax.swing.JTable kurirTbl;
    private javax.swing.JTextField namaField;
    private javax.swing.JTextField namaKendaraanField;
    private javax.swing.JLabel namaLabel;
    private javax.swing.JButton nextButton;
    private javax.swing.JTextField noTelpField;
    private javax.swing.JLabel noTelpLabel;
    private javax.swing.JPasswordField passField;
    private javax.swing.JLabel platNoLabel;
    private javax.swing.JTextField platNomorField;
    private javax.swing.JButton prevButton;
    private javax.swing.JButton updateButton;
    private javax.swing.JTextField usernameField;
    private javax.swing.JLabel usernameLabel;
    private javax.swing.JLabel usernameLabel1;
    // End of variables declaration//GEN-END:variables
}
